{"version":3,"sources":["ToDoList.js","App.js","index.js"],"names":["TodoList","props","addTask","task","taskList","state","todoList","newTaskList","undefined","length","alert","lastTask","filter","v","toLowerCase","addTaskList","id","isFav","concat","console","log","firstTaskList","setState","enterValue","setFavouriteTask","index","findIndex","lst","deleteTask","splice","this","map","data","TableRow","TableCell","onClick","Table","className","TableHead","colSpan","InputLabel","Input","placeholder","disableUnderline","onKeyPress","e","key","target","value","onChange","TableBody","React","Component","App","rootElement","document","getElementById","ReactDOM","render"],"mappings":"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","file":"static/js/main.09232898.chunk.js","sourcesContent":["import React from \"react\";\r\nimport \"./styles.css\";\r\nimport {\r\n  Table,\r\n  Input,\r\n  TableRow,\r\n  InputLabel,\r\n  TableHead,\r\n  TableCell,\r\n  TableBody\r\n} from \"@material-ui/core\";\r\nimport StarIcon from \"@material-ui/icons/Star\";\r\nimport StarOutlineIcon from \"@material-ui/icons/StarOutline\";\r\nimport DeleteIcon from \"@material-ui/icons/Delete\";\r\n\r\nclass TodoList extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      todoList: [],\r\n      enterValue: \"\"\r\n    };\r\n  }\r\n\r\n  addTask = (task) => {\r\n    const taskList = this.state.todoList;\r\n    let newTaskList = [];\r\n\r\n    if (task === null || task === undefined || task.length < 1) {\r\n      alert(\"Please enter task !!!\");\r\n      return;\r\n    } else {\r\n      if (taskList.length > 0) {\r\n        let lastTask = taskList[taskList.length - 1];\r\n\r\n        let filterTask = taskList.filter(\r\n          (v) => v.task.toLowerCase() === task.toLowerCase()\r\n        );\r\n\r\n        if (filterTask.length > 0) {\r\n          alert(\"Task already added !!!\");\r\n          return;\r\n        } else {\r\n          const addTaskList = {\r\n            id: lastTask.id + 1,\r\n            task: task,\r\n            isFav: false\r\n          };\r\n\r\n          newTaskList = taskList.concat(addTaskList);\r\n          console.log(\"newTask\", newTaskList);\r\n        }\r\n      } else {\r\n        const firstTaskList = {\r\n          id: 1,\r\n          task: task,\r\n          isFav: false\r\n        };\r\n\r\n        newTaskList = taskList.concat(firstTaskList);\r\n        console.log(\"newTask\", newTaskList);\r\n      }\r\n      this.setState({\r\n        todoList: newTaskList,\r\n        enterValue: \"\"\r\n      });\r\n    }\r\n  };\r\n\r\n  setFavouriteTask = (id) => {\r\n    const index = this.state.todoList.findIndex((lst) => lst.id === id),\r\n      todoList = [...this.state.todoList]; // important to create a copy, otherwise you'll modify state outside of setState call\r\n    todoList[index].isFav = !todoList[index].isFav;\r\n    this.setState({ todoList });\r\n  };\r\n\r\n  deleteTask = (id) => {\r\n    const index = this.state.todoList.findIndex((lst) => lst.id === id),\r\n      todoList = [...this.state.todoList];\r\n    todoList.splice(index, 1);\r\n\r\n    this.setState({ todoList });\r\n  };\r\n\r\n  render() {\r\n    const todoList = this.state.todoList;\r\n    const enterValue = this.state.enterValue;\r\n\r\n    const taskList =\r\n      todoList.length > 0\r\n        ? todoList.map((data) => {\r\n            return (\r\n              <TableRow key={data.id}>\r\n                <TableCell>{data.task}</TableCell>\r\n                <TableCell>\r\n                  {data.isFav ? (\r\n                    <StarIcon\r\n                      onClick={() => {\r\n                        this.setFavouriteTask(data.id);\r\n                      }}\r\n                    />\r\n                  ) : (\r\n                    <StarOutlineIcon\r\n                      onClick={() => {\r\n                        this.setFavouriteTask(data.id);\r\n                      }}\r\n                    />\r\n                  )}\r\n                  &nbsp;&nbsp;&nbsp;\r\n                  <DeleteIcon\r\n                    onClick={() => {\r\n                      this.deleteTask(data.id);\r\n                    }}\r\n                  />\r\n                </TableCell>\r\n              </TableRow>\r\n            );\r\n          })\r\n        : null;\r\n\r\n    return (\r\n      <div>\r\n        <Table className=\"table\">\r\n          <TableHead>\r\n            <TableRow>\r\n              <TableCell colSpan={2} className=\"tableBody\">\r\n                <InputLabel>\r\n                  <b>Todo List</b>\r\n                </InputLabel>\r\n              </TableCell>\r\n            </TableRow>\r\n            <TableRow>\r\n              <TableCell colSpan={2}>\r\n                <Input\r\n                  placeholder=\"Enter Your Todo Task\"\r\n                  disableUnderline\r\n                  onKeyPress={(e) =>\r\n                    e.key === \"Enter\" ? this.addTask(e.target.value) : \"\"\r\n                  }\r\n                  value={enterValue}\r\n                  onChange={(e) => {\r\n                    this.setState({ enterValue: e.target.value });\r\n                  }}\r\n                />\r\n              </TableCell>\r\n            </TableRow>\r\n          </TableHead>\r\n          <TableBody>{taskList}</TableBody>\r\n        </Table>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default TodoList;\r\n","import React from \"react\";\nimport \"./styles.css\";\nimport TodoList from \"./ToDoList\";\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {};\n  }\n\n  render() {\n    return (\n      <div>\n        <TodoList />\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import { StrictMode } from \"react\";\nimport ReactDOM from \"react-dom\";\n\nimport App from \"./App\";\n\nconst rootElement = document.getElementById(\"root\");\nReactDOM.render(\n  <StrictMode>\n    <App />\n  </StrictMode>,\n  rootElement\n);\n"],"sourceRoot":""}